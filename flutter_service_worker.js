"use strict";const MANIFEST="flutter-app-manifest",TEMP="flutter-temp-cache",CACHE_NAME="flutter-app-cache",RESOURCES={"assets/AssetManifest.bin":"511eb39ede1d1889311c536bab5f9cf3","assets/AssetManifest.json":"22826b80d953105768821c1eab432527","assets/AssetManifest.smcbin":"d9c5550e1460fa3b73e0a5a3d2e68d09","assets/assets/collection/collection.txt":"7a68f09bd992671bb3b19a5e70b7827e","assets/assets/credentials/credentials.json":"45e096c2d9d439bbb231d89067f80dc5","assets/assets/fonts/Poppins-SemiBold.ttf":"6f1520d107205975713ba09df778f93f","assets/assets/images/asistencia.jpg":"c50822e3926d8a8b8f0b618299ae0a4d","assets/assets/images/BANRURAL.jpg":"6abfa79ca6280e56ded30796c2855879","assets/assets/images/BANRURAL.png":"4f0ab698ddd78f61b1ed156d99c67fa6","assets/assets/images/flecha.jpg":"c2ac0c172b2092264c4b63a3c7e660de","assets/assets/images/home.png":"dc321a2b9fd9fc189991b55e1cac4521","assets/assets/images/ingresa.jpg":"f4fcb40de32b07e44bf82bfacda0edb7","assets/assets/images/ingresaorange.jpg":"a8d14a16adf7235ef89b49ebdc4e6ed5","assets/assets/images/locoom.png":"7fd40a4fa4de3c9ce50d4731a1ed30ab","assets/assets/images/logopg1.jpg":"e5c7e2936b95c0ea2bea78cd60476628","assets/assets/images/passw.jpg":"88eb1caee0d6f6eb52b5374beb70388a","assets/assets/images/regresar1.jpg":"61f802c02bd0abe1498c8debe1d9bd6c","assets/assets/images/siguiente.jpg":"49d60a534b70376b9a76bc5750282994","assets/assets/images/triangkle.jpg":"623b6ecc1359c7272a34823610385332","assets/assets/images/usuario.jpg":"95a0e89b2cbf291c187930dfab5e3e96","assets/assets/images/wpaper.jpg":"0875082ac212adfd66f81593dab90439","assets/assets/lottie_animations/A27462.json":"49766aa3c3a9628c5a30db33c1644ac5","assets/assets/lottie_animations/animation_lm8db7lo.json":"81b6dd82f72ba2bdde30fff3caac42e9","assets/FontManifest.json":"5a32d4310a6f5d9a6b651e75ba0d7372","assets/fonts/MaterialIcons-Regular.otf":"ae4f58cb2530315314aa43a1fd587455","assets/NOTICES":"f90d1b0705bc434cdd1e87f75f8c3b7b","assets/packages/cupertino_icons/assets/CupertinoIcons.ttf":"f2163b9d4e6f1ea52063f498c8878bb9","assets/packages/font_awesome_flutter/lib/fonts/fa-brands-400.ttf":"0db203e8632f03baae0184700f3bda48","assets/packages/font_awesome_flutter/lib/fonts/fa-regular-400.ttf":"01bb14ae3f14c73ee03eed84f480ded9","assets/packages/font_awesome_flutter/lib/fonts/fa-solid-900.ttf":"efc6c90b58d765987f922c95c2031dd2","assets/packages/wakelock_web/assets/no_sleep.js":"7748a45cd593f33280669b29c2c8919a","assets/shaders/ink_sparkle.frag":"f8b80e740d33eb157090be4e995febdf","canvaskit/canvaskit.js":"7c4a2df28f03b428a63fb10250463cf5","canvaskit/canvaskit.wasm":"f93cce574798cbc3f46e44765b523058","canvaskit/chromium/canvaskit.js":"2236901a15edcdf16e2eaf18ea7a7415","canvaskit/chromium/canvaskit.wasm":"addd330d70d04918ab2059efeba5105f","canvaskit/profiling/canvaskit.js":"38164e5a72bdad0faa4ce740c9b8e564","canvaskit/profiling/canvaskit.wasm":"95a45378b69e77af5ed2bc72b2209b94","canvaskit/skwasm.js":"95f16c6690f955a45b2317496983dbe9","canvaskit/skwasm.wasm":"c3803dbb1ac015d00c055bea11adb934","canvaskit/skwasm.worker.js":"51253d3321b11ddb8d73fa8aa87d3b15","favicon.png":"a71f0a2dbe0b3e87fd13e80d9758dc86","flutter.js":"a96e4cac3d2da39d86bf871613180e7b","flutter.min.js":"512257558b66409cdc5bf5d57ffe92bf","flutter_service_worker.min.js":"ca0b198dd5ca687367be9ff5e8e081ec","icons/Icon-192.png":"9abdd2d77454e154b995ceb2ac686243","icons/Icon-512.png":"6198178b0852a31e5c754400b1746b46","icons/Icon-maskable-192.png":"92840835eeee3069aeb0b6e691440e3d","icons/Icon-maskable-512.png":"1c2bf936970a02d62f3f3e9f637055a2","index.html":"e4aefdb411b0cc3bbdd8d707b0d3e829","/":"e4aefdb411b0cc3bbdd8d707b0d3e829","main.dart.js":"545f57995b15a3ba42f2ac2fb0357dda","main.dart.min.js":"26525eb0e46979aed3a39a56c4699490","manifest.json":"1196da0df853452e0066532149b64976","version.json":"00241bedd3c9ee812bd63b0f40fbcf8a"},CORE=["main.dart.js","index.html","assets/AssetManifest.json","assets/FontManifest.json"];async function downloadOffline(){var request,resourceKey,resources=[],contentCache=await caches.open(CACHE_NAME),currentContent={};for(request of await contentCache.keys()){var key=request.url.substring(origin.length+1);currentContent[key=""==key?"/":key]=!0}for(resourceKey of Object.keys(RESOURCES))currentContent[resourceKey]||resources.push(resourceKey);return contentCache.addAll(resources)}function onlineFirst(event){return event.respondWith(fetch(event.request).then(response=>caches.open(CACHE_NAME).then(cache=>(cache.put(event.request,response.clone()),response))).catch(error=>caches.open(CACHE_NAME).then(cache=>cache.match(event.request).then(response=>{if(null!=response)return response;throw error}))))}self.addEventListener("install",event=>(self.skipWaiting(),event.waitUntil(caches.open(TEMP).then(cache=>cache.addAll(CORE.map(value=>new Request(value,{cache:"reload"}))))))),self.addEventListener("activate",function(event){return event.waitUntil(async function(){try{var contentCache=await caches.open(CACHE_NAME),tempCache=await caches.open(TEMP),manifestCache=await caches.open(MANIFEST),manifest=await manifestCache.match("manifest");if(manifest){var oldManifest=await manifest.json(),origin=self.location.origin;for(request of await contentCache.keys()){var key=request.url.substring(origin.length+1);""==key&&(key="/"),RESOURCES[key]&&RESOURCES[key]==oldManifest[key]||await contentCache.delete(request)}for(request of await tempCache.keys()){response=await tempCache.match(request);await contentCache.put(request,response)}}else{await caches.delete(CACHE_NAME),contentCache=await caches.open(CACHE_NAME);for(var request of await tempCache.keys()){var response=await tempCache.match(request);await contentCache.put(request,response)}}await caches.delete(TEMP),await manifestCache.put("manifest",new Response(JSON.stringify(RESOURCES))),self.clients.claim()}catch(err){console.error("Failed to upgrade service worker: "+err),await caches.delete(CACHE_NAME),await caches.delete(TEMP),await caches.delete(MANIFEST)}}())}),self.addEventListener("fetch",event=>{if("GET"===event.request.method){var origin=self.location.origin,key=event.request.url.substring(origin.length+1);if(-1!=key.indexOf("?v=")&&(key=key.split("?v=")[0]),event.request.url!=origin&&!event.request.url.startsWith(origin+"/#")&&""!=key||(key="/"),RESOURCES[key])return"/"==key?onlineFirst(event):void event.respondWith(caches.open(CACHE_NAME).then(cache=>cache.match(event.request).then(response=>response||fetch(event.request).then(response=>(response&&Boolean(response.ok)&&cache.put(event.request,response.clone()),response)))))}}),self.addEventListener("message",event=>{"skipWaiting"===event.data?self.skipWaiting():"downloadOffline"===event.data&&downloadOffline()});