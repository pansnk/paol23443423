var _flutter=_flutter||{};_flutter.loader=null,function(){"use strict";base=document.querySelector("base");const baseUri=""==(base=base&&base.getAttribute("href")||"")||base.endsWith("/")?base:base+"/";var base;async function timeout(promise,duration,debugName){if(duration<0)return promise;let timeoutId;var _clock=new Promise((_,reject)=>{timeoutId=setTimeout(()=>{reject(new Error(debugName+` took more than ${duration}ms to resolve. Moving on.`,{cause:timeout}))},duration)});return Promise.race([promise,_clock]).finally(()=>{clearTimeout(timeoutId)})}class FlutterTrustedTypesPolicy{constructor(validPatterns,policyName="flutter-js"){const patterns=validPatterns||[/\.js$/];window.trustedTypes&&(this.policy=trustedTypes.createPolicy(policyName,{createScriptURL:function(url){var parsed=new URL(url,window.location);const file=parsed.pathname.split("/").pop();if(patterns.some(pattern=>pattern.test(file)))return parsed.toString();console.error("URL rejected by TrustedTypes policy",policyName,":",url,"(download prevented)")}}))}}class FlutterServiceWorkerLoader{setTrustedTypesPolicy(policy){this._ttPolicy=policy}loadServiceWorker(settings){if(null==settings)return console.debug("Null serviceWorker configuration. Skipping."),Promise.resolve();if(!("serviceWorker"in navigator)){let errorMessage="Service Worker API unavailable.";return window.isSecureContext||(errorMessage+="\nThe current context is NOT secure.\nRead more: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts"),Promise.reject(new Error(errorMessage))}var{serviceWorkerVersion:settings,serviceWorkerUrl:settings=baseUri+"flutter_service_worker.js?v="+settings,timeoutMillis=4e3}=settings;let url=settings;return null!=this._ttPolicy&&(url=this._ttPolicy.createScriptURL(url)),timeout(navigator.serviceWorker.register(url).then(this._getNewServiceWorker).then(this._waitForServiceWorkerActivation),timeoutMillis,"prepareServiceWorker")}async _getNewServiceWorker(serviceWorkerRegistration){var newRegistration;return serviceWorkerRegistration.active||!serviceWorkerRegistration.installing&&!serviceWorkerRegistration.waiting?serviceWorkerRegistration.active.scriptURL.endsWith(serviceWorkerVersion)?(console.debug("Loading from existing service worker."),serviceWorkerRegistration.active):(newRegistration=await serviceWorkerRegistration.update(),console.debug("Updating service worker."),newRegistration.installing||newRegistration.waiting||newRegistration.active):(console.debug("Installing/Activating first service worker."),serviceWorkerRegistration.installing||serviceWorkerRegistration.waiting)}async _waitForServiceWorkerActivation(serviceWorker){if(serviceWorker&&"activated"!=serviceWorker.state)return new Promise((resolve,_)=>{serviceWorker.addEventListener("statechange",()=>{"activated"==serviceWorker.state&&(console.debug("Activated new service worker."),resolve())})});if(!serviceWorker)throw new Error("Cannot activate a null service worker!");console.debug("Service worker already active.")}}class FlutterEntrypointLoader{constructor(){this._scriptLoaded=!1}setTrustedTypesPolicy(policy){this._ttPolicy=policy}async loadEntrypoint(options){var{entrypointUrl:options=baseUri+"main.dart.js",onEntrypointLoaded}=options||{};return this._loadEntrypoint(options,onEntrypointLoaded)}didCreateEngineInitializer(engineInitializer){"function"==typeof this._didCreateEngineInitializerResolve&&(this._didCreateEngineInitializerResolve(engineInitializer),this._didCreateEngineInitializerResolve=null,delete _flutter.loader.didCreateEngineInitializer),"function"==typeof this._onEntrypointLoaded&&this._onEntrypointLoaded(engineInitializer)}_loadEntrypoint(entrypointUrl,onEntrypointLoaded){var useCallback="function"==typeof onEntrypointLoaded;if(!this._scriptLoaded){this._scriptLoaded=!0;const scriptTag=this._createScriptTag(entrypointUrl);if(!useCallback)return new Promise((resolve,reject)=>{console.debug("Injecting <script> tag. Using Promises. Use the callback approach instead!"),this._didCreateEngineInitializerResolve=resolve,scriptTag.addEventListener("error",reject),document.body.append(scriptTag)});console.debug("Injecting <script> tag. Using callback."),this._onEntrypointLoaded=onEntrypointLoaded,document.body.append(scriptTag)}}_createScriptTag(url){var scriptTag=document.createElement("script");scriptTag.type="application/javascript";let trustedUrl=url;return null!=this._ttPolicy&&(trustedUrl=this._ttPolicy.createScriptURL(url)),scriptTag.src=trustedUrl,scriptTag}}_flutter.loader=new class{async loadEntrypoint(options){const{serviceWorker,...entrypoint}=options||{};var options=new FlutterTrustedTypesPolicy,serviceWorkerLoader=new FlutterServiceWorkerLoader,serviceWorkerLoader=(serviceWorkerLoader.setTrustedTypesPolicy(options.policy),await serviceWorkerLoader.loadServiceWorker(serviceWorker).catch(e=>{console.warn("Exception while loading service worker:",e)}),new FlutterEntrypointLoader);return serviceWorkerLoader.setTrustedTypesPolicy(options.policy),this.didCreateEngineInitializer=serviceWorkerLoader.didCreateEngineInitializer.bind(serviceWorkerLoader),serviceWorkerLoader.loadEntrypoint(entrypoint)}}}();